name: GitHub Pages

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org/ | python3 -
      - name: Add Poetry to PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: ${HOME}/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ matrix.python_version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf ${HOME}/.cache/pypoetry/virtualenvs
      - name: Install Dependencies
        run: poetry install

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "::set-output name=tag_name::${TAG_NAME}"
          echo "::set-output name=deploy_tag_name::deploy-${TAG_NAME}"
      - name: Build doc
        run: poetry run sphinx-build -M html ./docs/ ./docs/_build
      - name: Deploy Doc
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          tag_name: ${{ steps.prepare_tag.outputs.deploy_tag_name }}
          tag_message: "Deployment ${{ steps.prepare_tag.outputs.tag_name }}"
